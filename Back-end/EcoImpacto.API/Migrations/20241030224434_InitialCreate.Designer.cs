// <auto-generated />
using EcoImpacto.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(EcoImpactoDbContext))]
    [Migration("20241030224434_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcoImpacto.Communication.Requests.RequestCalculatorResultJson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("ConsumoCombustivelLitros")
                        .HasColumnType("double precision");

                    b.Property<double>("ConsumoEnergiaKWh")
                        .HasColumnType("double precision");

                    b.Property<double>("ConsumoGasM3")
                        .HasColumnType("double precision");

                    b.Property<double>("ConsumoVeiculoKmPorLitro")
                        .HasColumnType("double precision");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PraticasReciclagem")
                        .HasColumnType("integer");

                    b.Property<double>("TransportePublicoKm")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("CalculatorData");
                });
#pragma warning restore 612, 618
        }
    }
}
